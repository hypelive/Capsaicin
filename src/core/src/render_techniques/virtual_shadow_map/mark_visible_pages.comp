#include "virtual_shadow_map_shared.h"
#include "math/color.hlsl"
#include "math/transform.hlsl"

ConstantBuffer<VSMConstants> g_Constants;
Texture2D<float> g_DepthCopy;
RWTexture2DArray<uint> g_VirtualPageTableUav;
// TODO remove
RWTexture2D<float4> g_TargetTexture;

[numthreads(TILE_SIZE, TILE_SIZE, 1)]
void main(uint2 gtid : SV_GroupThreadID, uint2 gid : SV_GroupID, uint2 did : SV_DispatchThreadID)
{
    uint2 pixelCoordinates = did;
    if (any(pixelCoordinates >= g_Constants.screenSize.xy))
    {
        return;
    }
    float depth = g_DepthCopy.Load(int3(pixelCoordinates, 0));
    // Skip skybox.
    if (depth <= 0.0f)
    {
        return;
    }

    float3 worldPosition = reconstructWorldPosition((float2(pixelCoordinates) + 0.5f) * g_Constants.screenSize.zw,
                                                    depth, g_Constants.invViewProjection);
    
    float3 lightNdc0 = calculateLightNdc(worldPosition, g_Constants.lightViewProjection, 0);
    uint clipmapIndex = calculateClipmapIndexUnbound(lightNdc0);
    if (clipmapIndex >= CASCADES_NUM_UINT)
    {
        return;
    }

    float3 lightNdc = lightNdc0;
    lightNdc.xy /= (1u << clipmapIndex);

    float3 virtualTextureUv = calculateVirtualTextureUv(lightNdc, g_Constants.lightViewProjection, clipmapIndex);
    const uint2 pageCoordinates = virtualTextureUv.xy * PAGE_TABLE_RESOLUTION;

    g_VirtualPageTableUav[uint3(pageCoordinates, clipmapIndex)] = 1;

#if 0
    g_TargetTexture[pixelCoordinates] = float4(frac(virtualTextureUv * PAGE_TABLE_RESOLUTION).xy, virtualTextureUv.z, 1);
#else

    const float4 colors[8] =
    {
        float4(1.0, 0.0, 0.0, 1.0), // Red
        float4(0.0, 1.0, 0.0, 1.0), // Green
        float4(0.0, 0.0, 1.0, 1.0), // Blue
        float4(1.0, 1.0, 0.0, 1.0), // Yellow
        float4(1.0, 0.0, 1.0, 1.0), // Magenta
        float4(0.0, 1.0, 1.0, 1.0), // Cyan
        float4(1.0, 0.5, 0.0, 1.0), // Orange
        float4(0.5, 0.0, 0.5, 1.0)  // Purple
    };

    g_TargetTexture[pixelCoordinates] = colors[clipmapIndex];
#endif
}
