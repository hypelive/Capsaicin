#include "ssao_shared.h"
#include "math/color.hlsl"

ConstantBuffer<SSAOConstants> g_Constants;
Texture2D<float> g_Input;
RWTexture2D<float> g_Output;

[numthreads(TILE_SIZE, TILE_SIZE, 1)]
void main(uint2 gtid : SV_GroupThreadID, uint2 gid : SV_GroupID, uint2 did : SV_DispatchThreadID)
{
    int2 currentTexelCoordinates = did;
    if (any(currentTexelCoordinates >= g_Constants.screenSize.xy))
    {
        return;
    }

    const int filterRadius = 2;
    float sum = 0.0f;
    for (int x = -filterRadius; x <= filterRadius; ++x)
    {
        for (int y = -filterRadius; y <= filterRadius; ++y)
        {
            int2 sampleCoordinates = currentTexelCoordinates + float2(x, y);
            sampleCoordinates = clamp(sampleCoordinates, float2(0.0f, 0.0f), g_Constants.screenSize.xy - 1.0f);

            sum += g_Input.Load(int3(sampleCoordinates, 0));
        }
    }

    float samplesCount = 2 * filterRadius + 1;
    samplesCount *= samplesCount;

    g_Output[currentTexelCoordinates] = sum / samplesCount;
}