#include "custom_tone_mapping_shared.h"
#include "math/color.hlsl"

ConstantBuffer<ToneMapConstants> g_Constants;
RWTexture2D<float4> g_TargetTexture;

float3 tonemap(float3 radiance)
{
    return radiance / (1.0f + radiance);
}

float3 applyInverseGamma(float3 color)
{
    return pow(color, 1.0f / 2.2f);
}

[numthreads(TILE_SIZE, TILE_SIZE, 1)]
void main(uint2 gtid : SV_GroupThreadID, uint2 gid : SV_GroupID, uint2 did : SV_DispatchThreadID)
{
    if (any(did >= g_Constants.screenSize.xy))
    {
        return;
    }

    float3 radiance = g_TargetTexture[did].xyz;
    float3 color = tonemap(radiance);
    color = applyInverseGamma(color);

    g_TargetTexture[did] = float4(color, 1.0f);
}
